document.addEventListener("DOMContentLoaded", () => {
    const items = {{ config.options | dump | safe }};
    const autocompleteElement = document.querySelector('#{{ id }}-container');
    const inputElement = document.getElementById('{{ inputId }}');
    const listboxId = '{{ inputId }}__listbox'; // Use a consistent ID for the listbox

    const init = (defaultValue) => {
        accessibleAutocomplete({
            element: autocompleteElement,
            id: '{{ inputId }}', // same as labelFor
            name: '{{ config.name }}',
            source: items.map(item => item.displayText),
            showAllValues: true,
            autoselect: false,
            enhanceSelectElement: false,
            displayMenu: 'overlay',
            defaultValue: defaultValue,
            placeholder: 'Please selectâ€¦',
            menuAttributes: {'aria-labelledby': '{{ inputId }}', 'aria-describedby': '{{ errorMessageId }}'},
            onConfirm: (confirmed) => {
                const selectedOption = document.querySelector(`li[role="option"][aria-selected="true"]`);
                if (selectedOption) {
                    inputElement.setAttribute('aria-activedescendant', selectedOption.id);
                }
            },
            onOpen: () => {
                inputElement.setAttribute('aria-expanded', 'true');
                inputElement.setAttribute('aria-controls', listboxId);
            },
            onClose: () => {
                inputElement.setAttribute('aria-expanded', 'false');
            }
        });
    }

    autocompleteElement.reset = () => {
        if (autocompleteElement.firstChild) {
            autocompleteElement.firstChild.remove();
        }
        init('');
    };

    init('{{ value }}');
});
